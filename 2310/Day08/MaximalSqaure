class MaximalSqaure {

    public int maximalSquare(char[][] matrix) {

        int maxLen=0;
        int rowLen=matrix.length;
        int colLen=matrix[0].length;
        int[][] dp=new int[rowLen][colLen];

        boolean hasOne=false;

        for(int i=0; i<rowLen; i++){
                dp[i][0]=matrix[i][0]-'0';
                if(!hasOne&&dp[i][0]==1){
                    hasOne=true;
                }
        }
        for(int j=0; j<colLen; j++){
                dp[0][j]=matrix[0][j]-'0';

            if(!hasOne&&dp[0][j]==1){
                hasOne=true;
            }
        }
        if(hasOne){
            maxLen=1;
        }
        for(int i=1; i<rowLen; i++){
            for(int j=1; j<colLen; j++){
                if(matrix[i][j]=='0'){
                    dp[i][j]=0;
                }else {

                    dp[i][j]=Math.min(Math.min(dp[i-1][j-1],dp[i-1][j]),dp[i][j-1])+1;

                    if(dp[i][j]>maxLen){
                        maxLen=dp[i][j];
                    }
                }
            }
        }
        return maxLen*maxLen;
    }
}