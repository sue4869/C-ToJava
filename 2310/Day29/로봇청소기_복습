import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 로봇청소기 {

    static int N,M,r,c,d, ans;
    static int [][] map;
    static int [] dx = {-1,0,1,0};
    static int [] dy = {0,1,0,-1};

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        st = new StringTokenizer(br.readLine());

        N = Integer.parseInt(st.nextToken());
        M= Integer.parseInt(st.nextToken());

        map = new int [N][M];

        st = new StringTokenizer(br.readLine());

        r = Integer.parseInt(st.nextToken());
        c = Integer.parseInt(st.nextToken());
        d = Integer.parseInt(st.nextToken());

        for(int i=0;i<N;i++) {
            st = new StringTokenizer(br.readLine());
            for(int j=0;j<M;j++) {
                map[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        isClean(r,c,d);

        System.out.println(ans);

    }

    public static void isClean(int x, int y, int dir) {

        if(map[x][y]==0) {
            map[x][y]=2;
            ans++;
        }

        boolean flag = false;
        int direction = dir;

        for(int i=0;i<4;i++) {

            int nd = (dir+3)%4;
            int nx = x+dx[nd];
            int ny = y+dy[nd];
            if(range(nx,ny)) {
                if(map[nx][ny]==0) {
                    isClean(nx,ny,nd);
                    flag = true;
                    break;
                }
            }
            dir = nd;
        }

        if(!flag) {
            int nd = (direction+2) %4;
            int nx = x+dx[nd];
            int ny = y+dy[nd];
            if(range(nx,ny) && map[nx][ny]!=1) {
                isClean(nx,ny,direction);
            }
        }
    }

    public static boolean range(int x, int y) {
        return x>=0 && x<N && y>=0 && y<M;
    }

}
